---
# vim:ft=ansible:

- name: Ensure apache is not installed.
  apt:
    name: apache2
    state: absent
  notify: stop apache

- name: Install Nginx
  apt:
    name: nginx
    state: present
  notfiy: restart nginx

- name: Create root dir for nginx.
  file:
    name: "{{ nginx_root_dir }}"
    state: present
    owner: www-data
    group: www-data
    mode: 774

- name: Create dir for default site.
  file:
    name: "{{ nginx_root_dir }}/default/"
    state: present
    owner: www-data
    group: www-data
    mode: 774

- name: Copy default index.html
  copy:
    src: index.html
    dest: "{{ nginx_root_dir }}/default/index.html"
    owner: www-data
    group: www-data
    mode: 774

- name: Remove default default conf files.
  file:
    name: /etc/nginx/sites-available/default
    state: absent
  file:
    name: /etc/nginx/sites-enabled/default
    state: absent

- name: Copy default nginx site conf
  template:
    src: default.nginx.j2
    dest: /etc/nginx/sites-available/default.nginx.conf
    owner: www-data
    group: www-data
    mode: 774

- name: Link default conf to enabled sites
  file:
    src: /etc/nginx/sites-available/default.nginx.conf
    dest: /etc/nginx/sites-enabled/default.nginx.conf
    state: link

# Try both SUDO_USER and USER. We cant be sure if role
# will be run with sudo:yes but most likely will.
- name: Add SUDO_USER to www-data group
  user:
    name: "{{ ansible.ansible_env.SUDO_USER }}"
    append: yes
    groups: www-data
  register: add_group
  ignore_errors: True

- name: Add USER to www-data group
  user:
    name: "{{ ansible.ansible_env.USER }}"
    append: yes
    groups: www-data
  when: add_group|failed
